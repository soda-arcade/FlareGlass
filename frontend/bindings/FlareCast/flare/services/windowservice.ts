// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as glfw$0 from "../../../github.com/go-gl/glfw/v3.1/glfw/models.js";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * Blur the overlay window
 */
export function Blur(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(778219540) as any;
    return $resultPromise;
}

/**
 * Focus the overlay window
 */
export function Focus(): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4227605631) as any;
    return $resultPromise;
}

export function GetMonitor(index: number): Promise<glfw$0.Monitor | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(416130963, index) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetMonitors(): Promise<$models.Monitor[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3955180960) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType3($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetPrimaryMonitor(): Promise<glfw$0.Monitor | null> & { cancel(): void } {
    let $resultPromise = $Call.ByID(341648467) as any;
    let $typingPromise = $resultPromise.then(($result: any) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

export function GetResolution(): Promise<[number, number]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3845970265) as any;
    return $resultPromise;
}

export function MoveMainWindowToMonitor(index: number): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(496858250, index) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = glfw$0.Monitor.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = $models.Monitor.createFrom;
const $$createType3 = $Create.Array($$createType2);
